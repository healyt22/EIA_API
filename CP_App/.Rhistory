files = list.files()
readlist = lapply(files, function(x)
{read.table(x, header = TRUE, check.names = FALSE ,sep = ",")}
)
filenames = c("Biomass", "Coal", "Fuel Oil", "Fossil Fuels", "GDP", "Geothermal", "Hydro",
"Natural Gas", "Nuclear", "Petroleum", "Renewables", "Solar", "Wind")
names(readlist) = filenames
readlist2 = readlist[-5]
readlist2 = lapply(readlist2, function(x) { x[, 1:18] } )
GDP = readlist$GDP
readlist2 = lapply(readlist2, function(x) { x[,2:17] / GDP[2:17] })
readlist2 = lapply(readlist2, function(x) { cbind(State, x)})
readlist2$Renewables
library(ggplot2)
test = readlist2$Coal
test$`2013`
quantile(test$`2013`)
q = quantile(test$`2013`)
test = readlist$Coal$`2013`
q = quantile(test)
test = readlist$Coal [ ,1:2]
test
q = quantile(test$`2013`)
q
test$fillkey = cut(test$`2013`, q, include.lowest = TRUE, labels = c("A", "B"))
test$fillkey = cut(test$`2013`, q, include.lowest = TRUE, labels = c("A", "B", "C", "D", "E"))
test$fillkey = cut(test$`2013`, q, include.lowest = TRUE, labels = c("A", "B", "C", "D", "E", "F"))
test$fillkey = cut(test$`2013`, q, include.lowest = TRUE, labels = c("A", "B", "C", "D"))
test
dat_quant = lapply(readlist2, function(x) { x$fillkey = 1 })
dat_quant$Coal
test$fillkey = cut(test$`2013`, q, include.lowest = TRUE, labels = c("A", "B", "C", "D"))
test
test$fillkey = cut(test$`2013`, q, include.lowest = TRUE, labels = c("A", "B", "C", "D"))
colnames(test)
test = readlist2$Coal
colnames(test)
colnames(test) [2:17]
cols = colnames(readlist2$Biomass [2:18])
cols = colnames(readlist2$Biomass [,2:18])
cols = colnames(readlist2$Biomass) [2:18])
cols = colnames(readlist2$Biomass) [2:18]
cols
cols = colnames(readlist2$Biomass) [2:18]
dat_quant = lapply(readlist2, function(x) {
for(i in cols) {
q = quantile(x$i)
quant_iter = cut(x$i, q, include.lowest = TRUE,
labels = c("A", "B", "C", "D"))
cbind(x, quant_iter)
}
})
dat_quant = lapply(readlist2$Biomass, quantile)
str(readlist2$Biomass)
ncol(readlist2$Coal)
dat_quant = lapply(readlist2$Biomass[,2:17], quantile)
dat_quant
for(i in readlist2) {
q = lapply( i [, 2:17], function(x) {
quantile
})
}
q
for(i in readlist2) {
q = lapply( i [, 2:18], quantile)
}
for(i in readlist2) {
q = lapply( i [, 2:17], quantile)
}
q
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
source_dat
install.packages(rMaps)
install.packages("rMaps")
install.packages(rCharts)
install.packages("rCharts")
install.packages("rCharts")
install.packages("rCharts")
install.packages("rCharts")
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = "2013"
library(rCharts)
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = 'Greens'
)
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = source_dat$`2013`
library(rCharts)
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = 'Greens'
)
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = source_dat["2013"]
library(rCharts)
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = 'Greens'
)
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = source_dat[,"2013"]
library(rCharts)
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = 'Greens'
)
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = source_dat[,"2013"]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
library(rCharts)
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
SOURCE = "Coal"
source_dat = readlist2[[SOURCE]]
YEAR = source_dat[,"2013"]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
library(rCharts)
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
library(rCharts)
SOURCE = "Coal"
YEAR = source_dat[,"2013"]
source_dat = readlist2[[SOURCE]]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
library(rCharts)
SOURCE = "Coal"
YEAR = source_dat[,"1997"]
source_dat = readlist2[[SOURCE]]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
library(rCharts)
SOURCE = "Coal"
YEAR = source_dat[,"2013"]
source_dat = readlist2[[SOURCE]]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
library(rCharts)
SOURCE = "Renewables"
YEAR = source_dat[,"2013"]
source_dat = readlist2[[SOURCE]]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
rCharts::choropleth(
cut(YEAR, 5, labels = T) ~ State,
data = source_dat,
pal = cols
)
library(rCharts)
SOURCE = "Renewables"
YEAR = source_dat[,"2013"]
source_dat = readlist2[[SOURCE]]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
write.csv(readlist2, "master.csv")
read.csv("master.csv")
test = read.csv("master.csv")
str(test)
library(rCharts)
SOURCE = "Renewables"
YEAR = source_dat[,"2013"]
source_dat = readlist2[[SOURCE]]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
readlist2[["Renewables"]]
as.character(1,997)
as.character(1997)
source_dat[, "1997"]
source_dat
source_dat[, 1997]
colnames(source_dat)
shiny::runApp()
shiny::runApp()
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2013)
source_dat = source_dat[, YEAR]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map$print()
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2013)
source_dat = source_dat[, YEAR]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(1998)
source_dat = source_dat[, YEAR]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, YEAR]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, YEAR]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
source_dat
readlist2[["Renewables"]]
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, YEAR]
source_dat
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, c("1", YEAR)]
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, c("State", YEAR)]
source_dat
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, c("State", YEAR)]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(YEAR, 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2000)
source_dat = source_dat[, c("State", YEAR)]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(source_dat[, YEAR], 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
YEAR = as.character(2013)
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(1998)
source_dat = source_dat[, c("State", YEAR)]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(source_dat[, YEAR], 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
SOURCE = "Renewables"
source_dat = readlist2[[SOURCE]]
YEAR = as.character(2013)
source_dat = source_dat[, c("State", YEAR)]
if(SOURCE %in% c("Solar", "Wind", "Biomass", "Geothermal", "Hydro", "Renewables")){
cols = 'Greens'
} else {
cols = 'Reds'
}
energy_map = rCharts::choropleth(
cut(source_dat[, YEAR], 5, labels = F) ~ State,
data = source_dat,
pal = cols
)
energy_map$addParams(dom = "energy_map")
energy_map
shiny::runApp()
durl <- "https://docs.google.com/spreadsheet/pub?key=0AovoNzJt5GetdGxyaVlpM3ZtTVBiNjlDS0hvanVORnc&single=true&gid=0&output=csv"
dat <- get_gdoc(durl)
dat2 <- reshape(dat, varying = names(dat)[2:35], direction = 'long', timevar = "year")
dat2m <- reshape2::melt(dat2, id = c(1:3, 6))
dat2m <- na.omit(transform(dat2m, value = as.numeric(as.character(value))))
names(dat2m) <- c('country', 'countrycode', 'year', 'id', 'gender', 'value')
head(dat2m)
get_gdoc <- function(url){
require(RCurl)
s = getURLContent(url)
read.csv(textConnection(s))
get_gdoc <- function(url){
require(RCurl)
s = getURLContent(url)
read.csv(textConnection(s))
}
durl <- "https://docs.google.com/spreadsheet/pub?key=0AovoNzJt5GetdGxyaVlpM3ZtTVBiNjlDS0hvanVORnc&single=true&gid=0&output=csv"
dat <- get_gdoc(durl)
dat2 <- reshape(dat, varying = names(dat)[2:35], direction = 'long', timevar = "year")
dat2m <- reshape2::melt(dat2, id = c(1:3, 6))
dat2m <- na.omit(transform(dat2m, value = as.numeric(as.character(value))))
names(dat2m) <- c('country', 'countrycode', 'year', 'id', 'gender', 'value')
head(dat2m)
shiny::runApp()
options(RCHART_LIB = 'polycharts')
shiny::runApp()
shiny::runApp()
files
files = list.files()
readlist = lapply(files, function(x)
{read.table(x, header = TRUE, check.names = FALSE ,sep = ",")}
)
files = list.files()
readlist = lapply(files, function(x)
{read.csv(x, header = TRUE, check.names = FALSE)}
)
read.csv("BMTCB.csv")
read.csv("BMTCB.csv", header = TRUE, check.names = FALSE)
readlist = lapply(files, function(x)
{read.csv(x, header = TRUE, check.names = FALSE)}
)
list.files()
?list.files
files = list.files(pattern = ".csv")
fies
files
files = list.files(pattern = ".csv")
readlist = lapply(files, function(x)
{read.csv(x, header = TRUE, check.names = FALSE)}
)
readlist
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
energy_map$lib
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='thedukat', token='5D626FDDE326B8FD07FAC150D5718100', secret='mk3EGUs6hpfNoqXujMwOq/+yjU8d1uTHRq43v1F3')
library(shinyapps)
shinyapps::deployApp('~/healyt22/EIA_API/CP_App')
shiny::runApp()
shiny::runApp()
shiny::runApp()
install_github('rCharts', 'ramnathv')
library(devtools)
install_github('rCharts', 'ramnathv')
shiny::runApp()
shinyapps::deployApp('~/healyt22/EIA_API/CP_App')
shiny::runApp()
shinyapps::deployApp('~/healyt22/EIA_API/CP_App')
shiny::runApp()
shinyapps::deployApp('~/healyt22/EIA_API/CP_App')
list.files(./data)
list.files("./data")
files = paste("./data", list.files("./data"))
files
files = paste("./data/", list.files("./data"), sep = "")
files
files = paste("./data/", list.files("./data"), sep = "")
readlist = lapply(files, function(x)
{read.csv(x, header = TRUE, check.names = FALSE)}
)
filenames = c("Biomass", "Coal", "Fuel Oil", "Fossil Fuels", "GDP", "Geothermal", "Hydro",
"Natural Gas", "Nuclear", "Petroleum", "Renewables", "Solar", "Wind")
names(readlist) = filenames
readlist
shiny::runApp()
getwd()
library(shinyapps)
shinyapps::deployApp("/Users/TimHealy/healyt22/EIA_API/CP_App")
shiny::runApp()
